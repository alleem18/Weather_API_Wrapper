{"ast":null,"code":"var _jsxFileName = \"/Users/junaid/Desktop/Backend/WeatherAPI/Weather_API_Wrapper/weather-app/src/components/WeatherSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeatherSearch = ({\n  setWeatherData,\n  setIsCached\n}) => {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [type, setType] = useState(\"forecast\"); // Default to \"forecast\"\n  const [date1, setDate1] = useState(\"\");\n  const [date2, setDate2] = useState(\"\");\n  const fetchWeather = async () => {\n    if (!city) {\n      alert(\"Please enter a city name!\");\n      return;\n    }\n    try {\n      const response = await axios.get(\"http://localhost:5000/weather\", {\n        params: {\n          city,\n          type,\n          date1,\n          date2\n        }\n      });\n      setWeatherData(response.data.weather);\n      setIsCached(response.data.cached);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      alert(\"Failed to fetch weather data. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter city name\",\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: type,\n      onChange: e => setType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"forecast\",\n        children: \"Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"current\",\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), type === \"forecast\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Start Date\",\n        value: date1,\n        onChange: e => setDate1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"End Date\",\n        value: date2,\n        onChange: e => setDate2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherSearch, \"uNTN+kcmiyyS1WTB5/zJoyGfP5Q=\");\n_c = WeatherSearch;\nexport default WeatherSearch;\nvar _c;\n$RefreshReg$(_c, \"WeatherSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherSearch","setWeatherData","setIsCached","_s","city","setCity","type","setType","date1","setDate1","date2","setDate2","fetchWeather","alert","response","get","params","data","weather","cached","error","console","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/junaid/Desktop/Backend/WeatherAPI/Weather_API_Wrapper/weather-app/src/components/WeatherSearch.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst WeatherSearch = ({ setWeatherData, setIsCached }) => {\n  const [city, setCity] = useState(\"\");\n  const [type, setType] = useState(\"forecast\"); // Default to \"forecast\"\n  const [date1, setDate1] = useState(\"\");\n  const [date2, setDate2] = useState(\"\");\n\n  const fetchWeather = async () => {\n    if (!city) {\n      alert(\"Please enter a city name!\");\n      return;\n    }\n\n    try {\n      const response = await axios.get(\"http://localhost:5000/weather\", {\n        params: { city, type, date1, date2 },\n      });\n      setWeatherData(response.data.weather);\n      setIsCached(response.data.cached);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      alert(\"Failed to fetch weather data. Please try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Enter city name\"\n        value={city}\n        onChange={(e) => setCity(e.target.value)}\n      />\n      <select value={type} onChange={(e) => setType(e.target.value)}>\n        <option value=\"forecast\">Forecast</option>\n        <option value=\"current\">Current Weather</option>\n      </select>\n      {type === \"forecast\" && (\n        <>\n          <input\n            type=\"date\"\n            placeholder=\"Start Date\"\n            value={date1}\n            onChange={(e) => setDate1(e.target.value)}\n          />\n          <input\n            type=\"date\"\n            placeholder=\"End Date\"\n            value={date2}\n            onChange={(e) => setDate2(e.target.value)}\n          />\n        </>\n      )}\n      <button onClick={fetchWeather}>Get Weather</button>\n    </div>\n  );\n};\n\nexport default WeatherSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}